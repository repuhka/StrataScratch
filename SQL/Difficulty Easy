-- Find all routine inspections where high-risk issues were found
-- City of Los Angeles

select * from los_angeles_restaurant_health_inspections
where service_description = 'ROUTINE INSPECTION' and grade = 'C';

-- Find the average number of bathrooms and bedrooms for each cityâ€™s property types. Output the result along with the city name and the property type.
-- Airbnb

select  city, property_type,avg(bedrooms) avg_bedrooms, avg(bathrooms) avg_bathrooms
from airbnb_search_details
group by city, property_type;

-- Find the most profitable company from the financial sector. Output the result along with the continent.
-- Forbes

select company,continent 
from forbes_global_2010_2014
where sector = 'Financials'
group by continent, company
order by max(profits) desc
limit 1;

-- Write a query that will calculate the number of shipments per month. The unique key for one shipment is a combination of shipment_id and sub_id. Output the year_month in format YYYY-MM and the number of shipments in that month.
-- Amazon

select to_char(shipment_date, 'YYYY-MM'), count(distinct concat(shipment_id,' ',sub_id))
from amazon_shipment
group by to_char(shipment_date, 'YYYY-MM');

-- You have been asked to find the 5 most lucrative products in terms of total revenue for the first half of 2022 (from January to June inclusive).
-- Meta

select product_id, sum(cost_in_dollars * units_sold) as profit
from online_orders
group by product_id
order by sum(cost_in_dollars * units_sold) desc
limit 5;

-- Write a query that returns the number of unique users per client per month
-- Dell, Apple, Microsoft

select client_id, to_char(time_id, 'MM') as month_used, count(distinct user_id) 
from fact_events
group by client_id, to_char(time_id, 'MM');

-- Count the number of user events performed by MacBookPro users.
-- Output the result along with the event name.
-- Sort the result based on the event count in the descending order.
-- Apple

select event_name, count(user_id) as event_count 
from playbook_events
where device = 'macbook pro'
group by event_name
order by count(user_id) desc;

-- Find the activity date and the pe_description of facilities with the name 'STREET CHURROS' and with a score of less than 95 points.
-- City of Los Angeles

select activity_date, pe_description
from los_angeles_restaurant_health_inspections
where score < 95 and facility_name LIKE 'STREET CHURROS';

-- Find the number of employees working in the Admin department that joined in April or later.
-- Amazon, Microsoft

select count(distinct worker_id) 
from worker
where department = 'Admin' and joining_date >= '2014-04-01';

-- Find the number of workers by department who joined in or after April.
-- Output the department name along with the corresponding number of workers.
-- Sort records based on the number of workers in descending order.
-- Amazon

select department, count(distinct worker_id) 
from worker
where joining_date >= '2014-04-01'
group by department
order by count(distinct worker_id) desc;

-- Find the details of each customer regardless of whether the customer made an order. Output the customer's first name, last name, and the city along with the order details.
-- Sort records based on the customer's first name and the order details in ascending order.
-- Apple, Amazon

select c.first_name, c.last_name, c.city, o.order_details 
from customers c
left join orders o on c.id = o.cust_id
order by c.first_name, o.order_details asc;

-- Find order details made by Jill and Eva.
-- Consider the Jill and Eva as first names of customers.
-- Output the order date, details and cost along with the first name.
-- Order records based on the customer id in ascending order.
-- Amazon, Shopify

select o.order_date, o.order_details, o.total_order_cost, c.first_name 
from customers c join orders o on c.id = o.cust_id
where c.first_name in ('Jill','Eva')
order by c.id asc;

-- Compare each employee's salary with the average salary of the corresponding department.
-- Output the department, first name, and salary of employees along with the average salary of that department.
-- Salesforce, Glassdoor

select first_name, department, salary, avg(salary) over (partition by department)
from employee;

-- Find libraries who haven't provided the email address in circulation year 2016 but their notice preference definition is set to email.
-- Output the library code.
-- City of San Francisco

select home_library_code 
from library_usage
where notice_preference_definition = 'email' and provided_email_address = 'FALSE' 
and circulation_active_year = 2016
group by home_library_code;

-- Find the base pay for Police Captains.
-- Output the employee name along with the corresponding base pay.
-- City of San Francisco

select employeename, basepay 
from sf_public_salaries
where jobtitle like '%CAPTAIN%';


-- Find how many times each artist appeared on the Spotify ranking list
-- Output the artist name along with the corresponding number of occurrences.
-- Order records by the number of occurrences in descending order.
-- Spotify

select artist, count(id) as appeared_on_list 
from spotify_worldwide_daily_song_ranking
group by artist
order by count(id) desc;


--Find all Lyft drivers who earn either equal to or less than 30k USD or equal to or more than 70k USD.
--Output all details related to retrieved records.
--Lyft

select * 
from lyft_drivers
where yearly_salary < 30000 or yearly_salary>70000;

--Meta/Facebook has developed a new programing language called Hack.To measure the popularity of Hack they ran a survey with their employees. The survey included data on previous programing familiarity as well as the number of years of experience, age, gender and most importantly satisfaction with Hack. Due to an error location data was not collected, but your supervisor demands a report showing average popularity of Hack by office location. Luckily the user IDs of employees completing the surveys were stored.
--Based on the above, find the average popularity of the Hack per office location.
--Output the location along with the average popularity.
-- Meta

select e.location, avg(h.popularity) as average_popularity
from facebook_employees e
left join facebook_hack_survey h on e.id = h.employee_id
group by e.location;

-- Find all posts which were reacted to with a heart. For such posts output all columns from facebook_posts table.
-- Meta

select p.*
from facebook_reactions r left join facebook_posts p on r.post_id=p.post_id
where reaction = 'heart'
group by p.post_id, p.poster, p.post_text, p.post_keywords, p.post_date;

-- Count the number of movies that Abigail Breslin was nominated for an oscar.
-- Netflix

select count(distinct movie) from oscar_nominees
 where nominee = 'Abigail Breslin';

 --Find the number of rows for each review score earned by 'Hotel Arena'. Output the hotel name (which should be 'Hotel Arena'), review score along with the corresponding number of rows with that score for the specified hotel.
 -- Expedia, Airbnb

select hotel_name, reviewer_score, count(hotel_address)
from hotel_reviews
where hotel_name like '%Hotel Arena%'
group by hotel_name, reviewer_score;

-- Find the last time each bike was in use. Output both the bike number and the date-timestamp of the bike's last use (i.e., the date-time the bike was returned). Order the results by bikes that were most recently used.
-- Doordash, Lyft

select bike_number, max(end_time) as last_used 
from dc_bikeshare_q1_2012
group by bike_number
order by max(end_time) desc;

-- We have a table with employees and their salaries, however, some of the records are old and contain outdated salary information. Find the current salary of each employee assuming that salaries increase each year. Output their id, first name, last name, department ID, and current salary. Order your list by employee ID in ascending order.
-- Microsoft

select id, first_name, last_name, max(salary) as current_salary, department_id
from ms_employee_salary
group by id, first_name, last_name, department_id
order by id asc;

-- Write a query that calculates the difference between the highest salaries found in the marketing and engineering departments. Output just the absolute difference in salaries.
-- Linkedin, Dropbox

select ABS(max(case when d.department = 'marketing' then e.salary else null end) - max(case when d.department = 'engineering' then e.salary else null end)) as salary_difference
from db_employee e
join db_dept d on e.department_id = d.id;
